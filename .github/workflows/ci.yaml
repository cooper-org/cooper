name: Continuous Integration

on:
  pull_request:
  push:
    branches: [ master ]

concurrency:
  # github.workflow: name of the workflow
  # github.event.pull_request.number || github.ref: pull request number or branch name if not a pull request
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}

  # Cancel in-progress runs when a new workflow with the same group name is triggered
  cancel-in-progress: true

jobs:
  precommit:
    name: Pre-commit checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Pre-commit checks
        # uses: pre-commit/action@v3.0.1
        run: uvx --isolated --with pre-commit-uv pre-commit run --all-files --show-diff-on-failure

  test:
    needs: precommit
    name: Tests
    runs-on: ubuntu-latest
    env:
      UV_COMPILE_BYTECODE: 1
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]
        TORCH_VERSION: [ "1.13.1", "2.0.1", "2.1.2", "2.2.2", "2.3.1", "2.4.1", "2.5.1", "2.6.0" ]
        include:
          - python-version: "3.12"
            TORCH_VERSION: "2.4.1"
          - python-version: "3.12"
            TORCH_VERSION: "2.5.1"
          - python-version: "3.12"
            TORCH_VERSION: "2.6.0"
          - python-version: "3.13"
            TORCH_VERSION: "2.6.0"
        exclude:
          - python-version: "3.11"
            TORCH_VERSION: "1.13.1"
    steps:
      - uses: actions/checkout@v4

      - name: Intall uv & Set up Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: Install dependencies & PyTorch ${{ matrix.TORCH_VERSION }}
        run: |
          uv sync --group tests --no-install-package torch
          uv pip install torch==${{ matrix.TORCH_VERSION }}

      - name: Launch tests
        # Only run the unit tests, not the pipeline tests.
        # Pipeline tests are too expensive to run for every python/PyTorch version.
        # However, they are run as part the coverage job in the CI workflow
        run: uv run --no-sync pytest --ignore=tests/pipeline tests
