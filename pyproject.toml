[build-system]
build-backend = "setuptools.build_meta"
requires = [
    "setuptools>=69.0.2",
    "setuptools-scm>=8.0.4",
]

[project]
name = "cooper"
description = "cooper is a toolkit for Lagrangian-based constrained optimization in PyTorch"
authors = [
    { name = "Jose Gallego-Posada", email = "jgalle29@gmail.com" },
    { name = "Juan Ramirez", email = "juan43.ramirez@gmail.com" },
    { name = "Meraj Hashemizadeh", email = "merajhashemi@yahoo.co.uk" },
]
maintainers = [
    { name = "Jose Gallego-Posada", email = "jgalle29@gmail.com" },
    { name = "Juan Ramirez", email = "juan43.ramirez@gmail.com" },
    { name = "Meraj Hashemizadeh", email = "merajhashemi@yahoo.co.uk" },
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
readme = { file = "README.md", content-type = "text/markdown" }
license = { text = "MIT License" }
requires-python = ">=3.9"
dependencies = [
    "torch>=1.13.1",
    "numpy>=1.22.0",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/cooper-org/cooper"
Documentation = "https://cooper.readthedocs.io"
Repository = "https://github.com/cooper-org/cooper"
Issues = "https://github.com/cooper-org/cooper/issues"

[project.optional-dependencies]
dev = [
    "ruff~=0.5.2",
    "cvxpy~=1.5.1",
    "mypy~=1.7.1",
    "pre-commit>=3.6.0",
    "pytest~=8.2.2",
    "pytest-cov==4.1.0",
    "twine==4.0.2",
    "tox==4.11.4",
]
docs = [
    "myst-parser>=0.15.2",
    "sphinx-autobuild>=2021.3.14",
    "sphinx-autodoc-typehints>=1.12.0",
    "sphinx-copybutton>=0.4.0",
    "sphinx-gallery>=0.10.1",
    "sphinx-rtd-theme>=1.0.0",
    "sphinxcontrib-katex>=0.8.6",
    "sphinxcontrib-bibtex>=2.4.1",
    "sphinxcontrib-contentui>=0.2.5",
    "sphinx>=4.3.1",
    "matplotlib>=3.5.0,<4.0.0",
    "ipykernel>=6.5.0,<7.0.0",
    "ipywidgets>=7.6.0,<8.0.0",
    "torchvision>=0.13.0,<1.0.0",
]
tests = [
    "cvxpy~=1.5.1",
    "pytest~=8.2.2",
    "pytest-cov==4.1.0",
    "tox==4.11.4",
]
examples = [
    "numpy==1.22.0",
    "matplotlib>=3.5.0,<4.0.0",
    "ipykernel>=6.5.0,<7.0.0",
    "ipywidgets>=7.6.0,<8.0.0",
    "torchvision>=0.13.0,<1.0.0",
]

[tool.setuptools]
license-files = ["LICENSE"]

[tool.setuptools.package-data]
cooper = ["py.typed"]

[tool.setuptools_scm]

[tool.mypy]
mypy_path = "cooper"
warn_unused_configs = true

[tool.ruff]
line-length = 120
target-version = "py39"
extend-include = ["*.ipynb"]
extend-exclude = ["__pycache__", "docs"]

[tool.ruff.lint.isort]
known-first-party = ["cooper", "tests"]

[tool.ruff.lint]
extend-select = [
    "B", # Likely bugs
    "E", # PEP8 errors
    "F", # PEP8 formatting
    "I", # Import sorting
    "TID251", # Banned API
    "UP", # Pyupgrade
    "W", # PEP8 warnings
    "Q", # Quotes consistency
    "ARG", # Unused Arguments
#    "D", # TODO: Uncomment this line when we have docstrings for all functions
]
ignore = [
    "E731", # Lambda function
    "B028", # Stacklevel in warnings
    "E501", # Line length (handled by ruff-format)
    "W505", # Doc Line length
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pycodestyle]
max-doc-length = 88
